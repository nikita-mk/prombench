---
version: 2.1

orbs:
  prometheus: niki1905/prometheus@0.1.8

executors:
  # Whenever the Go version is updated here, .travis.yml and .promu.yml
  # should also be updated.
  golang:
    docker:
    - image: circleci/golang:1.12

jobs:
  test:
    executor: golang
    steps:
    - prometheus/setup_environment
    - run:
        command: make style unused vet build
        environment:
          # By default Go uses GOMAXPROCS but a Circle CI executor has many
          # cores (> 30) while the CPU and RAM resources are throttled. If we
          # don't limit this to the number of allocated cores, the job is
          # likely to get OOMed and killed.
          GOOPTS: "-p 2"
    - run: git diff --exit-code
    - prometheus/store_artifact:
        file: prombench
    - prometheus/store_artifact:
        file: scaler
    - prometheus/store_artifact:
        file: fake-webserver
  publish_prombench:
    description: |
      Build and publish prombench image from the master branch.
    docker:
    - image: circleci/golang
    environment:
      DOCKERFILE_PATH: "./cmd/prombench/Dockerfile"
      DOCKER_IMAGE_NAME: "prombench"
    steps:
    - prometheus/publish_master

  # publish_prombench:
  #   description: |
  #     Build and publish prombench image from the master branch.
  #   docker:
  #   - image: circleci/golang
  #   steps:
  #   - prometheus/setup_build_environment
  #   - prometheus/publish_images:
  #       login_variable: DOCKER_LOGIN
  #       organization_variable: DOCKER_REPO
  #       password_variable: DOCKER_PASSWORD
  #       registry: docker.io
  #       dockerfile_variable: ./cmd/prombench/Dockerfile
  #       image_name_variable: prombench
  # publish_scaler:
  #   description: |
  #     Build and publish scaler image from the master branch.
  #   docker:
  #   - image: circleci/golang
  #   steps:
  #   - prometheus/setup_build_environment
  #   - prometheus/publish_images:
  #       login_variable: DOCKER_LOGIN
  #       organization_variable: DOCKER_REPO
  #       password_variable: DOCKER_PASSWORD
  #       registry: docker.io
  #       dockerfile_variable: ./cmd/scaler/Dockerfile
  #       image_name_variable: prombench

workflows:
  version: 2
  prombench:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - prometheus/build:
        name: build
        filters:
          tags:
            only: /.*/
    - publish_prombench:
        context: org-context
        requires:
        - test
        - build
        filters:
          branches:
            only: master
    # - publish_scaler:
    #     context: org-context
    #     requires:
    #     - test
    #     - build
    #     filters:
    #       branches:
    #         only: master